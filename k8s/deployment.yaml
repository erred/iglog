kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app.kubernetes.io/name: iglog
  name: iglog
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iglog
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iglog
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 10
      containers:
        - name: iglog
          image: us.gcr.io/com-seankhliao/iglog:latest
          args:
            - -db=postgresql://iglog@cockroachdb.default.svc.cluster.local:26257/iglog?sslmode=verify-full&sslrootcert=/var/secret/cockroachdb/ca.crt&sslcert=/var/secret/cockroachdb/tls.crt&sslkey=/var/secret/cockroachdb/tls.key
          ports:
            - name: grpc
              containerPort: 8080
            - name: metrics
              containerPort: 8000
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8000
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8000
          volumeMounts:
            - name: certs
              mountPath: /var/secret/tls
            - name: client
              mountPath: /var/secret/cockroachdb
            # # manual / initial deployment only
            # - name: initstate
            #   mountPath: /var/secret/iglog
      volumes:
        - name: certs
          secret:
            secretName: iglog-cert
        - name: client
          secret:
            secretName: cockroachdb-client-iglog
        # # manual / initial deployment only
        # - name: initstate
        #   secret:
        #     secretName: iglog-initstate
